// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { GetLanguagesResponse, GetActivityLogTypesResponse, AddCaseFilesData, AddCaseFilesResponse, DeleteCaseFilesData, DeleteCaseFilesResponse, GetCaseFileListingData, GetCaseFileListingResponse, UpdateCaseFileData, UpdateCaseFileResponse, LogCaseFilesDownloadData, LogCaseFilesDownloadResponse, LogPreviewCaseFileData, LogPreviewCaseFileResponse, GetUserFilesData, GetUserFilesResponse2, GetMyFilesResponse, UpdateUserFileData, UpdateUserFileResponse2, DeleteUserFileData, DeleteUserFileResponse, GenerateUserFileData, GenerateUserFileResponse, UpdateGeneratedFileData, UpdateGeneratedFileResponse2, GetGenerateFileByIdData, GetGenerateFileByIdResponse, DeleteGeneratedFileByIdData, DeleteGeneratedFileByIdResponse, GetUserFamilyMemberFilesData, GetUserFamilyMemberFilesResponse, GetUserFileDownloadUrlData, GetUserFileDownloadUrlResponse, GetUserFileCasesData, GetUserFileCasesResponse2, GetGeneratedFileDownloadUrlData, GetGeneratedFileDownloadUrlResponse, GetGeneratedTfileThumbnailDownloadUrlData, GetGeneratedTfileThumbnailDownloadUrlResponse, GetUserFileTypesResponse2, GetWorkflowsResponse, CreateUserFamilyMemberData, CreateUserFamilyMemberResponse, UpdateUserFamilyMemberData, UpdateUserFamilyMemberResponse, DeleteFamilyMemberData, DeleteFamilyMemberResponse2, GetFamilyMembersResponse, GetFamilyMemberData, GetFamilyMemberResponse, AddCaseFamilyMembersData, AddCaseFamilyMembersResponse, DeleteCaseFamilyMembersData, DeleteCaseFamilyMembersResponse, GetCaseFamilyMembersData, GetCaseFamilyMembersResponse, CreateCaseData, CreateCaseResponse2, GetCasesData, GetCasesResponse2, UpdateCaseData, UpdateCaseResponse2, DeleteCaseData, DeleteCaseResponse, GetCaseData, GetCaseResponse2, GetUserCasesAdminData, GetUserCasesAdminResponse, LogViewCaseFamilyMemberData, LogViewCaseFamilyMemberResponse, CreateUserData, CreateUserResponse2, GetUserResponse, UpdateUserData, UpdateUserResponse2, DeleteUserResponse, GetUserActivityData, GetUserActivityResponse2, GetUsersCasesData, GetUsersCasesResponse, GetUserAdminData, GetUserAdminResponse, PostMessagingPostMessageToWsConnectionsData, PostMessagingPostMessageToWsConnectionsResponse, GetConstantsResponse, AddCaseNoteData, AddCaseNoteResponse, DeleteCaseNoteData, DeleteCaseNoteResponse, UpdateCaseNoteData, UpdateCaseNoteResponse, GetCaseNotesData, GetCaseNotesResponse2, UpdateCaseCriterionData, UpdateCaseCriterionResponse, GetCriteriaCaseFilesData, GetCriteriaCaseFilesResponse, RemoveCaseCriterionAdminData, RemoveCaseCriterionAdminResponse, ApproveChecklistData, ApproveChecklistResponse, GetActivitiesForUserData, GetActivitiesForUserResponse, UpdateCaseActivityLogReadStatusData, UpdateCaseActivityLogReadStatusResponse } from './types.gen';

/**
 * Get myfile languages
 * @returns Language Default response body
 * @throws ApiError
 */
export const getLanguages = (): CancelablePromise<GetLanguagesResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/languages'
}); };

/**
 * Get activity log types
 * @returns string Default response body
 * @throws ApiError
 */
export const getActivityLogTypes = (): CancelablePromise<GetActivityLogTypesResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/lookups/activity-log-types'
}); };

/**
 * Add case files
 * @param data The data for the request.
 * @param data.caseId
 * @param data.userId
 * @param data.requestBody Default response body
 * @returns unknown Default response
 * @throws ApiError
 */
export const addCaseFiles = (data: AddCaseFilesData): CancelablePromise<AddCaseFilesResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/cases/{caseId}/files',
    path: {
        caseId: data.caseId
    },
    query: {
        userId: data.userId
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Delete case files
 * @param data The data for the request.
 * @param data.caseId
 * @param data.requestBody Default response body
 * @returns unknown Default response
 * @throws ApiError
 */
export const deleteCaseFiles = (data: DeleteCaseFilesData): CancelablePromise<DeleteCaseFilesResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/cases/{caseId}/files',
    path: {
        caseId: data.caseId
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Get case files
 * @param data The data for the request.
 * @param data.caseId
 * @returns GetCaseListingResponse Default response body
 * @throws ApiError
 */
export const getCaseFileListing = (data: GetCaseFileListingData): CancelablePromise<GetCaseFileListingResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/cases/{caseId}/files',
    path: {
        caseId: data.caseId
    }
}); };

/**
 * Update case file
 * @param data The data for the request.
 * @param data.id
 * @param data.requestBody Default response body
 * @returns unknown Default response
 * @throws ApiError
 */
export const updateCaseFile = (data: UpdateCaseFileData): CancelablePromise<UpdateCaseFileResponse> => { return __request(OpenAPI, {
    method: 'PATCH',
    url: '/cases/files/{id}',
    path: {
        id: data.id
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Log download case files
 * @param data The data for the request.
 * @param data.requestBody Default response body
 * @returns unknown Default response
 * @throws ApiError
 */
export const logCaseFilesDownload = (data: LogCaseFilesDownloadData = {}): CancelablePromise<LogCaseFilesDownloadResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/cases/files/log-download',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Log preview cas file
 * @param data The data for the request.
 * @param data.requestBody Default response body
 * @returns unknown Default response
 * @throws ApiError
 */
export const logPreviewCaseFile = (data: LogPreviewCaseFileData = {}): CancelablePromise<LogPreviewCaseFileResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/cases/files/log-preview',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Get user files.
 * @param data The data for the request.
 * @param data.userId
 * @returns GetUserFilesResponse Default response body
 * @throws ApiError
 */
export const getUserFiles = (data: GetUserFilesData): CancelablePromise<GetUserFilesResponse2> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/users/{userId}/files',
    path: {
        userId: data.userId
    }
}); };

/**
 * Get my files.
 * @returns GetUserFilesResponse Default response body
 * @throws ApiError
 */
export const getMyFiles = (): CancelablePromise<GetMyFilesResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/users/files'
}); };

/**
 * Update user file.
 * @param data The data for the request.
 * @param data.requestBody Default response body
 * @returns UpdateUserFileResponse Default response body
 * @throws ApiError
 */
export const updateUserFile = (data: UpdateUserFileData = {}): CancelablePromise<UpdateUserFileResponse2> => { return __request(OpenAPI, {
    method: 'PATCH',
    url: '/users/files',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Delete user file.
 * @param data The data for the request.
 * @param data.requestBody Default response body
 * @returns unknown Default response
 * @throws ApiError
 */
export const deleteUserFile = (data: DeleteUserFileData = {}): CancelablePromise<DeleteUserFileResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/users/files',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Generate user file.
 * @param data The data for the request.
 * @param data.requestBody Default response body
 * @returns CreateUserFileResponse Default response body
 * @throws ApiError
 */
export const generateUserFile = (data: GenerateUserFileData = {}): CancelablePromise<GenerateUserFileResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/users/files/generated',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Update generated file
 * @param data The data for the request.
 * @param data.requestBody Default response body
 * @returns UpdateGeneratedFileResponse Default response body
 * @throws ApiError
 */
export const updateGeneratedFile = (data: UpdateGeneratedFileData = {}): CancelablePromise<UpdateGeneratedFileResponse2> => { return __request(OpenAPI, {
    method: 'PATCH',
    url: '/users/files/generated',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Get generated file by id
 * @param data The data for the request.
 * @param data.id
 * @param data.userId
 * @returns GeneratedUserFile Default response body
 * @throws ApiError
 */
export const getGenerateFileById = (data: GetGenerateFileByIdData): CancelablePromise<GetGenerateFileByIdResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/users/files/generated',
    query: {
        id: data.id,
        userId: data.userId
    }
}); };

/**
 * Delete generated file and associated files by id
 * @param data The data for the request.
 * @param data.id
 * @returns unknown Default response body
 * @throws ApiError
 */
export const deleteGeneratedFileById = (data: DeleteGeneratedFileByIdData): CancelablePromise<DeleteGeneratedFileByIdResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/users/files/generated',
    query: {
        id: data.id
    }
}); };

/**
 * Get user family member files.
 * @param data The data for the request.
 * @param data.userId
 * @param data.userFamilyMemberId
 * @returns GetUserFilesResponse Default response body
 * @throws ApiError
 */
export const getUserFamilyMemberFiles = (data: GetUserFamilyMemberFilesData): CancelablePromise<GetUserFamilyMemberFilesResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/users/{userId}/files/family-member',
    path: {
        userId: data.userId
    },
    query: {
        userFamilyMemberId: data.userFamilyMemberId
    }
}); };

/**
 * Get download url for user file.
 * @param data The data for the request.
 * @param data.fileId
 * @param data.uploadVersionId
 * @param data.disposition
 * @returns UserFileDownloadResponse Default response body
 * @throws ApiError
 */
export const getUserFileDownloadUrl = (data: GetUserFileDownloadUrlData): CancelablePromise<GetUserFileDownloadUrlResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/users/files/download',
    query: {
        fileId: data.fileId,
        disposition: data.disposition,
        uploadVersionId: data.uploadVersionId
    }
}); };

/**
 * Get cases for user file.
 * @param data The data for the request.
 * @param data.fileId
 * @param data.userId
 * @returns GetUserFileCasesResponse Default response body
 * @throws ApiError
 */
export const getUserFileCases = (data: GetUserFileCasesData): CancelablePromise<GetUserFileCasesResponse2> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/users/files/{fileId}/cases',
    path: {
        fileId: data.fileId,
        userId: data.userId
    }
}); };

/**
 * Get generated file download url
 * @param data The data for the request.
 * @param data.generatedFileId
 * @param data.caseFileId
 * @param data.disposition
 * @param data.userId
 * @returns UserFileDownloadResponse Default response body
 * @throws ApiError
 */
export const getGeneratedFileDownloadUrl = (data: GetGeneratedFileDownloadUrlData): CancelablePromise<GetGeneratedFileDownloadUrlResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/users/files/generated/download',
    query: {
        generatedFileId: data.generatedFileId,
        caseFileId: data.caseFileId,
        disposition: data.disposition,
        userId: data.userId
    }
}); };

/**
 * Get generated file thumbnail download url
 * @param data The data for the request.
 * @param data.generatedFileId
 * @param data.isPreview
 * @param data.disposition
 * @param data.userId
 * @returns UserFileDownloadResponse Default response body
 * @throws ApiError
 */
export const getGeneratedTfileThumbnailDownloadUrl = (data: GetGeneratedTfileThumbnailDownloadUrlData): CancelablePromise<GetGeneratedTfileThumbnailDownloadUrlResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/users/files/generated/thumbnail/download',
    query: {
        generatedFileId: data.generatedFileId,
        isPreview: data.isPreview,
        disposition: data.disposition,
        userId: data.userId
    }
}); };

/**
 * Get All possible file types
 * @returns GetUserFileTypesResponse Default response body
 * @throws ApiError
 */
export const getUserFileTypes = (): CancelablePromise<GetUserFileTypesResponse2> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/users/files/types'
}); };

/**
 * Get myfile workflows
 * @returns Workflow Default response body
 * @throws ApiError
 */
export const getWorkflows = (): CancelablePromise<GetWorkflowsResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/workflows'
}); };

/**
 * Create a user family member
 * @param data The data for the request.
 * @param data.requestBody Default response body
 * @returns CreateFamilyMemberResponse Default response body
 * @throws ApiError
 */
export const createUserFamilyMember = (data: CreateUserFamilyMemberData = {}): CancelablePromise<CreateUserFamilyMemberResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/user/family',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Update user family member
 * @param data The data for the request.
 * @param data.requestBody Default response body
 * @returns UpdateFamilyMemberResponse Default response body
 * @throws ApiError
 */
export const updateUserFamilyMember = (data: UpdateUserFamilyMemberData = {}): CancelablePromise<UpdateUserFamilyMemberResponse> => { return __request(OpenAPI, {
    method: 'PATCH',
    url: '/user/family',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Delete user family members
 * @param data The data for the request.
 * @param data.requestBody Default response body
 * @returns DeleteFamilyMemberResponse Default response body
 * @throws ApiError
 */
export const deleteFamilyMember = (data: DeleteFamilyMemberData = {}): CancelablePromise<DeleteFamilyMemberResponse2> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/user/family',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Get user family members
 * @returns FamilyMember Default response body
 * @throws ApiError
 */
export const getFamilyMembers = (): CancelablePromise<GetFamilyMembersResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/user/family'
}); };

/**
 * Get user family member
 * @param data The data for the request.
 * @param data.id
 * @returns FamilyMember Default response body
 * @throws ApiError
 */
export const getFamilyMember = (data: GetFamilyMemberData): CancelablePromise<GetFamilyMemberResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/user/family/{id}',
    path: {
        id: data.id
    }
}); };

/**
 * Add case family members
 * @param data The data for the request.
 * @param data.caseId
 * @param data.requestBody Default response body
 * @returns AddCaseApplicantsResponse Default response body
 * @throws ApiError
 */
export const addCaseFamilyMembers = (data: AddCaseFamilyMembersData): CancelablePromise<AddCaseFamilyMembersResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/case/{caseId}/family-members',
    path: {
        caseId: data.caseId
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Delete case family members
 * @param data The data for the request.
 * @param data.caseId
 * @param data.requestBody Default response body
 * @returns unknown Default response
 * @throws ApiError
 */
export const deleteCaseFamilyMembers = (data: DeleteCaseFamilyMembersData): CancelablePromise<DeleteCaseFamilyMembersResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/case/{caseId}/family-members',
    path: {
        caseId: data.caseId
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Get case family members
 * @param data The data for the request.
 * @param data.caseId
 * @returns CaseApplicant Default response body
 * @throws ApiError
 */
export const getCaseFamilyMembers = (data: GetCaseFamilyMembersData): CancelablePromise<GetCaseFamilyMembersResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/case/{caseId}/family-members',
    path: {
        caseId: data.caseId
    }
}); };

/**
 * Create a new case
 * @param data The data for the request.
 * @param data.requestBody Default response body
 * @returns CreateCaseResponse Default response body
 * @throws ApiError
 */
export const createCase = (data: CreateCaseData = {}): CancelablePromise<CreateCaseResponse2> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/cases',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Get user cases
 * @param data The data for the request.
 * @param data.status
 * @returns GetCasesResponse Default response body
 * @throws ApiError
 */
export const getCases = (data: GetCasesData = {}): CancelablePromise<GetCasesResponse2> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/cases',
    query: {
        status: data.status
    }
}); };

/**
 * Update a case
 * @param data The data for the request.
 * @param data.caseId
 * @param data.requestBody Default response body
 * @returns UpdateCaseResponse Default response body
 * @throws ApiError
 */
export const updateCase = (data: UpdateCaseData): CancelablePromise<UpdateCaseResponse2> => { return __request(OpenAPI, {
    method: 'PATCH',
    url: '/cases/{caseId}',
    path: {
        caseId: data.caseId
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Delete a case
 * @param data The data for the request.
 * @param data.caseId
 * @returns unknown Default response
 * @throws ApiError
 */
export const deleteCase = (data: DeleteCaseData): CancelablePromise<DeleteCaseResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/cases/{caseId}',
    path: {
        caseId: data.caseId
    }
}); };

/**
 * Get a single case
 * @param data The data for the request.
 * @param data.caseId
 * @param data.workflowType
 * @returns GetCaseResponse Default response body
 * @throws ApiError
 */
export const getCase = (data: GetCaseData): CancelablePromise<GetCaseResponse2> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/cases/{caseId}',
    path: {
        caseId: data.caseId,
        workflowType: data.workflowType
    }
}); };

/**
 * Get User Cases Admin
 * @param data The data for the request.
 * @param data.userId
 * @returns GetCasesResponse Default response body
 * @throws ApiError
 */
export const getUserCasesAdmin = (data: GetUserCasesAdminData): CancelablePromise<GetUserCasesAdminResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/cases/user/{userId}',
    path: {
        userId: data.userId
    }
}); };

/**
 * Log View Family Member
 * @param data The data for the request.
 * @param data.requestBody Default response body
 * @returns unknown Default response
 * @throws ApiError
 */
export const logViewCaseFamilyMember = (data: LogViewCaseFamilyMemberData = {}): CancelablePromise<LogViewCaseFamilyMemberResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/cases/family-member/log-view',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Create user.
 * @param data The data for the request.
 * @param data.requestBody Default response body
 * @returns CreateUserResponse Default response body
 * @throws ApiError
 */
export const createUser = (data: CreateUserData = {}): CancelablePromise<CreateUserResponse2> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/users',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Get NYCID user data
 * @returns UserBase Default response body
 * @throws ApiError
 */
export const getUser = (): CancelablePromise<GetUserResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/users'
}); };

/**
 * Update user.
 * @param data The data for the request.
 * @param data.requestBody Default response body
 * @returns UpdateUserResponse Default response body
 * @throws ApiError
 */
export const updateUser = (data: UpdateUserData = {}): CancelablePromise<UpdateUserResponse2> => { return __request(OpenAPI, {
    method: 'PATCH',
    url: '/users',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Delete user
 * @returns unknown Default response
 * @throws ApiError
 */
export const deleteUser = (): CancelablePromise<DeleteUserResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/users'
}); };

/**
 * Get user activity.
 * @param data The data for the request.
 * @param data.activityTypes
 * @param data.from
 * @param data.to
 * @param data.page
 * @param data.pageSize
 * @returns GetUserActivitiesResponse Default response body
 * @throws ApiError
 */
export const getUserActivity = (data: GetUserActivityData = {}): CancelablePromise<GetUserActivityResponse2> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/users/activities',
    query: {
        activityTypes: data.activityTypes,
        from: data.from,
        to: data.to,
        page: data.page,
        pageSize: data.pageSize
    }
}); };

/**
 * Get User Cases
 * @param data The data for the request.
 * @param data.search
 * @param data.skip
 * @param data.take
 * @returns GetUsesCases Default response body
 * @throws ApiError
 */
export const getUsersCases = (data: GetUsersCasesData): CancelablePromise<GetUsersCasesResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/users/cases',
    query: {
        search: data.search,
        skip: data.skip,
        take: data.take
    }
}); };

/**
 * Get User Admin
 * @param data The data for the request.
 * @param data.userId
 * @returns GetUser Default response body
 * @throws ApiError
 */
export const getUserAdmin = (data: GetUserAdminData): CancelablePromise<GetUserAdminResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/users/{userId}',
    path: {
        userId: data.userId
    }
}); };

/**
 * Post message to connections
 * @param data The data for the request.
 * @param data.userId
 * @returns unknown Default response
 * @throws ApiError
 */
export const postMessagingPostMessageToWsConnections = (data: PostMessagingPostMessageToWsConnectionsData): CancelablePromise<PostMessagingPostMessageToWsConnectionsResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/messaging/post-message-to-ws-connections',
    path: {
        userId: data.userId
    }
}); };

/**
 * List all constants in my file api
 * @returns Constants Default response body
 * @throws ApiError
 */
export const getConstants = (): CancelablePromise<GetConstantsResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/constants'
}); };

/**
 * Add Case Note
 * @param data The data for the request.
 * @param data.requestBody Default response body
 * @returns CaseNote Default response body
 * @throws ApiError
 */
export const addCaseNote = (data: AddCaseNoteData = {}): CancelablePromise<AddCaseNoteResponse> => { return __request(OpenAPI, {
    method: 'POST',
    url: '/case/notes',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Delete case note
 * @param data The data for the request.
 * @param data.caseNoteId
 * @returns CaseNote Default response body
 * @throws ApiError
 */
export const deleteCaseNote = (data: DeleteCaseNoteData): CancelablePromise<DeleteCaseNoteResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/case/notes/{caseNoteId}',
    path: {
        caseNoteId: data.caseNoteId
    }
}); };

/**
 * Edit Case Note
 * @param data The data for the request.
 * @param data.requestBody Default response body
 * @returns CaseNote Default response body
 * @throws ApiError
 */
export const updateCaseNote = (data: UpdateCaseNoteData = {}): CancelablePromise<UpdateCaseNoteResponse> => { return __request(OpenAPI, {
    method: 'PATCH',
    url: '/case/note',
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Read Case Notes
 * @param data The data for the request.
 * @param data.caseId
 * @param data.limit
 * @param data.skip
 * @returns GetCaseNotesResponse Default response body
 * @throws ApiError
 */
export const getCaseNotes = (data: GetCaseNotesData): CancelablePromise<GetCaseNotesResponse2> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/case/{caseId}/notes',
    path: {
        caseId: data.caseId
    },
    query: {
        limit: data.limit,
        skip: data.skip
    }
}); };

/**
 * Update Case Criterion
 * @param data The data for the request.
 * @param data.caseCriterionId
 * @param data.requestBody Default response body
 * @returns CaseCriterion Default response body
 * @throws ApiError
 */
export const updateCaseCriterion = (data: UpdateCaseCriterionData): CancelablePromise<UpdateCaseCriterionResponse> => { return __request(OpenAPI, {
    method: 'PATCH',
    url: '/cases/criterion',
    path: {
        caseCriterionId: data.caseCriterionId
    },
    body: data.requestBody,
    mediaType: 'application/json'
}); };

/**
 * Get Criterion Case files
 * @param data The data for the request.
 * @param data.caseCriterionId
 * @returns CaseFile Default response body
 * @throws ApiError
 */
export const getCriteriaCaseFiles = (data: GetCriteriaCaseFilesData): CancelablePromise<GetCriteriaCaseFilesResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/cases/criteria/{caseCriterionId}/files',
    path: {
        caseCriterionId: data.caseCriterionId
    }
}); };

/**
 * Delete case criterion
 * @param data The data for the request.
 * @param data.caseCriterionId
 * @returns CaseFile Default response body
 * @throws ApiError
 */
export const removeCaseCriterionAdmin = (data: RemoveCaseCriterionAdminData): CancelablePromise<RemoveCaseCriterionAdminResponse> => { return __request(OpenAPI, {
    method: 'DELETE',
    url: '/case/criteria/{caseCriterionId}',
    path: {
        caseCriterionId: data.caseCriterionId
    }
}); };

/**
 * Approve Checklist (Workflow stage)
 * @param data The data for the request.
 * @param data.workflowStageId
 * @param data.caseId
 * @returns CaseCriteria Default response body
 * @throws ApiError
 */
export const approveChecklist = (data: ApproveChecklistData): CancelablePromise<ApproveChecklistResponse> => { return __request(OpenAPI, {
    method: 'PATCH',
    url: '/case/{caseId}/criteria/{workflowStageId}/approve',
    path: {
        workflowStageId: data.workflowStageId,
        caseId: data.caseId
    }
}); };

/**
 * Get User Activities
 * @param data The data for the request.
 * @param data.userId
 * @param data.skip
 * @param data.take
 * @param data.caseId
 * @param data.caseName
 * @param data.caseType
 * @param data.from
 * @param data.to
 * @param data.search
 * @param data.activityType
 * @returns GetUserActivityResponse Default response body
 * @throws ApiError
 */
export const getActivitiesForUser = (data: GetActivitiesForUserData): CancelablePromise<GetActivitiesForUserResponse> => { return __request(OpenAPI, {
    method: 'GET',
    url: '/activities/users/{userId}',
    path: {
        userId: data.userId
    },
    query: {
        skip: data.skip,
        take: data.take,
        caseId: data.caseId,
        caseName: data.caseName,
        caseType: data.caseType,
        from: data.from,
        to: data.to,
        search: data.search,
        activityType: data.activityType
    }
}); };

/**
 * Update Case Activity Log read status
 * @param data The data for the request.
 * @param data.requestBody Default response body
 * @returns CaseActivityLogs Default response body
 * @throws ApiError
 */
export const updateCaseActivityLogReadStatus = (data: UpdateCaseActivityLogReadStatusData = {}): CancelablePromise<UpdateCaseActivityLogReadStatusResponse> => { return __request(OpenAPI, {
    method: 'PATCH',
    url: '/activities/case',
    body: data.requestBody,
    mediaType: 'application/json'
}); };
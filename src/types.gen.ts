// This file is auto-generated by @hey-api/openapi-ts

export type Language = {
    id: string;
    Name: string;
    Code: string;
    CreatedAt: string;
};

export type AddCaseFileRequest = {
    GeneratedFileIds: Array<(string)>;
    CaseCriterionId?: string;
};

export type DeleteCaseFileRequest = {
    GeneratedFileIds: Array<(string)>;
    CaseCriterionId?: string;
};

export type StakeholderGroupRole = {
    id?: string;
    StakeholderGroupId?: string;
    Name?: 'Platform Administrator' | 'Platform Development' | 'Platform Support' | 'Client' | 'Client Trusted User' | 'PATH Employee' | 'PATH Administrator' | 'HPD Employee' | 'HPD Administrator' | 'DHS Employee' | 'DHS Administrator' | 'Sponsor' | 'CBO Supervisor' | 'CBO Staffer';
    Description?: string;
};

export type Name = 'Platform Administrator' | 'Platform Development' | 'Platform Support' | 'Client' | 'Client Trusted User' | 'PATH Employee' | 'PATH Administrator' | 'HPD Employee' | 'HPD Administrator' | 'DHS Employee' | 'DHS Administrator' | 'Sponsor' | 'CBO Supervisor' | 'CBO Staffer';

export type UserStakeholderGroupRole = {
    id?: string;
    StakeholderGroupRoleId?: string;
    UserId?: string;
    CreatedAt?: string;
    StakeholderGroupRole?: StakeholderGroupRole;
};

export type UserBase = {
    id?: string;
    FirstName?: string;
    LastName?: string;
    Email?: string;
    DOB?: string;
    LegacyId?: string;
    IdpId?: string;
    PlatformActivityLogs?: Array<unknown>;
    LanguageIsoCode?: string;
    TOSAcceptedAt?: string;
    TOSAccepted?: boolean;
    StakeholderGroupRoles?: Array<UserStakeholderGroupRole>;
};

export type BaseFamilyMember = {
    id: string;
    FirstName?: string;
    LastName?: string;
    UserId?: string;
    DOB?: string;
    Relationship?: string;
    User?: UserBase;
};

export type BaseUploadedMediaAssetVersion = {
    id?: string;
    ContentType?: string;
    SizeInBytes?: string;
    OriginalFilename?: string;
    CreatedAt?: string;
    LastModifiedAt?: string;
    CreatedByUserId?: string;
    LastModifiedByUserId?: string;
    UserFileId?: string;
    DeletedAt?: string;
};

export type BaseUserFile = {
    id?: string;
    LegacyId?: string;
    ContentType: string;
    ActiveVersionId?: string;
    FileType?: string;
    OriginalFilename: string;
    Title: string;
    CreatedAt?: string;
    LastModifiedAt?: string;
    FilePath?: string;
    FileUploadedAt?: string;
    Description?: string;
    User?: UserBase;
    UserFamilyMember?: BaseFamilyMember;
    OwnerUserId?: string;
    UploadedMediaAssetVersions?: Array<BaseUploadedMediaAssetVersion>;
    UploadUrls?: Array<(string)>;
    CreatedByUserId?: string;
    LastModifiedByUserId?: string;
};

export type BaseGeneratedUserFile = {
    id: string;
    ContentType?: string;
    OriginalFilename?: string;
    Status?: string;
    FamilyMemberId?: string;
    Description?: string;
    FileType?: string;
    CaseFiles?: Array<unknown>;
    CreatedByUserId?: string;
    CreatedByAgentUserId?: string;
    CreatedByUser?: UserBase;
    CreatedByAgentUser?: UserBase;
    SizeInBytes?: number;
    CreatedAt?: string;
    LastModifiedAt?: string;
    UserFamilyMember?: BaseFamilyMember;
    FromUserFiles?: Array<BaseUserFile>;
    Title?: string;
};

export type BaseCaseFile = {
    id: string;
    GeneratedFileId?: string;
    GeneratedFile?: BaseGeneratedUserFile;
    CaseCriterionId?: string;
    CreatedByAgentUserId?: string;
    CreatedByAgentUser?: UserBase;
    ReasonForResubmit?: string;
    Status: string;
    CreatedByUserId?: string;
    CaseId?: string;
    CreatedAt?: string;
    imagesAvailable?: boolean;
};

export type GeneratedUserFile = {
    id: string;
    ContentType?: string;
    OriginalFilename?: string;
    Status?: string;
    Description?: string;
    FamilyMemberId?: string;
    CreatedByUserId?: string;
    CreatedByAgentUserId?: string;
    CreatedByUser?: UserBase;
    CreatedByAgentUser?: UserBase;
    FileType?: string;
    CaseFiles?: Array<BaseCaseFile>;
    SizeInBytes?: number;
    CreatedAt?: string;
    LastModifiedAt?: string;
    UserFamilyMember?: BaseFamilyMember;
    FromUserFiles?: Array<BaseUserFile>;
    Title?: string;
};

export type GetCaseListingResponse = Array<{
    id: string;
    ReasonForResubmit?: string;
    Status: string;
    GeneratedFile?: GeneratedUserFile;
}>;

export type UpdateCaseFileRequest = {
    Status?: string;
    ReasonForResubmit?: string;
};

export type LogDownloadCaseFile = {
    caseFileIds: Array<(string)>;
};

export type LogPreviewCaseFile = {
    caseFileId: string;
};

export type UploadedMediaAssetVersion = {
    id?: string;
    ContentType: string;
    SizeInBytes: number;
    OriginalFilename: string;
    CreatedAt?: string;
    LastModifiedAt?: string;
    OwnerUserId?: string;
    CreatedByUserId?: string;
    LastModifiedByUserId?: string;
};

export type UserFile = {
    id?: string;
    LegacyId?: string;
    ContentType: string;
    ActiveVersionId?: string;
    OriginalFilename: string;
    FilePath?: string;
    FileUploadedAt?: string;
    UserFamilyMember?: BaseFamilyMember;
    Title: string;
    FileType?: string;
    CreatedAt?: string;
    LastModifiedAt?: string;
    OwnerUserId?: string;
    GeneratedFileId?: string;
    GeneratedFile?: GeneratedUserFile;
    UploadedMediaAssetVersions?: Array<UploadedMediaAssetVersion>;
    UploadUrls?: Array<(string)>;
    CreatedByUserId?: string;
    LastModifiedByUserId?: string;
    UploadUrl?: string;
    oldId?: string;
};

export type GetUserFilesResponse = Array<UserFile>;

export type CreateUserFileRequest = {
    UserFamilyMemberId?: string;
    Title: string;
    Description?: string;
    GeneratedFileId?: string;
    CaseCriterionId?: string;
    ForUserId?: string;
    DeletedFiles?: Array<(string)>;
    FileType?: string;
    FilesOrder?: Array<{
        old: boolean;
        id: string;
    }>;
    Files: Array<{
        id: string;
        ContentType: string;
        OriginalFilename: string;
        SizeInBytes: number;
        PageNumber: number;
    }>;
};

export type CreateUserFileResponse = {
    UserFiles?: Array<UserFile>;
};

export type UpdateUserFileRequest = {
    id: string;
    ContentType?: string;
    OriginalFilename?: string;
    Status?: string;
    SizeInBytes?: number;
    CaseCriterionId?: string;
    ForUserId?: string;
    PageNumber?: number;
    UserFamilyMemberId?: string;
    Title?: string;
};

export type UpdateUserFileResponse = {
    id?: string;
    LegacyId?: string;
    ContentType: string;
    ActiveVersionId?: string;
    OriginalFilename: string;
    FilePath?: string;
    FileUploadedAt?: string;
    UserFamilyMember?: BaseFamilyMember;
    Title: string;
    FileType?: string;
    CreatedAt?: string;
    LastModifiedAt?: string;
    OwnerUserId?: string;
    GeneratedFileId?: string;
    GeneratedFile?: GeneratedUserFile;
    UploadedMediaAssetVersions?: Array<UploadedMediaAssetVersion>;
    UploadUrls?: Array<(string)>;
    CreatedByUserId?: string;
    LastModifiedByUserId?: string;
    UploadUrl?: string;
    oldId?: string;
};

export type DeleteUserFileRequest = {
    id: string;
};

export type UserFileDownloadResponse = {
    downloadUrl?: string;
};

export type CaseAttributes = Array<{
    name: string;
    value: string;
}>;

export type BaseCaseNote = {
    id: string;
    NoteText?: string;
    ParentNoteId?: string;
    AuthorUserId?: string;
    NoteAudienceScope?: string;
    AuthorUser?: UserBase;
    CaseId?: string;
    CreatedAt?: string;
};

export type BaseWorkflow = {
    id: string;
    Name?: string;
    Type?: string;
    Description?: string;
};

export type BaseWorkflowStage = {
    id: string;
    StageName?: string;
    StagePosition?: string;
    WorkflowId?: string;
    Workflow?: BaseWorkflow;
};

export type BaseWorkflowStageCriterion = {
    id: string;
    CaseWorkflowStageId?: string;
    Name?: string;
    CaseCriteria?: Array<unknown>;
    CriterionSubGroupName?: string;
    CriterionGroupName?: string;
    CriterionFulfillmentType?: string;
    WorkflowStage?: BaseWorkflowStage;
};

export type BaseCaseCriterion = {
    id: string;
    Status?: string;
    LastModifiedByUserId?: string;
    CaseId?: string;
    UserId?: string;
    Index?: string;
    CaseFiles?: Array<BaseCaseFile>;
    RuleSets?: unknown;
    CriterionGroupName?: string;
    CriterionSubGroupName?: string;
    CriterionFulfillmentType?: string;
    CriterionFulfillmentStatus?: string;
    Name?: string;
    WorkflowStageCriterionId?: string;
    WorkflowStageCriterion?: BaseWorkflowStageCriterion;
    LastModifiedByUser?: UserBase;
    CreatedAt?: string;
};

export type BaseCase = {
    Title?: string;
    id: string;
    CaseType?: string;
    PercentComplete?: number;
    SSN?: string;
    AgencyCaseIdentifier?: string;
    CaseNotes?: Array<BaseCaseNote>;
    CaseCriteria?: Array<BaseCaseCriterion>;
    CaseAttributes?: CaseAttributes;
};

export type WorkflowStageCriterion = {
    id: string;
    CaseWorkflowStageId?: string;
    Name?: string;
    CaseCriteria?: Array<BaseCaseCriterion>;
    CriterionFulfillmentType?: string;
    DeletedAt?: string;
    CriterionSubGroupName?: string;
    CriterionGroupName?: string;
    WorkflowStage?: BaseWorkflowStage;
};

export type CaseCriterion = {
    id: string;
    Status?: string;
    LastModifiedByUserId?: string;
    CaseId?: string;
    RuleSets?: unknown;
    Index?: string;
    CaseFiles?: Array<BaseCaseFile>;
    UserId?: string;
    WorkflowStageCriterionId?: string;
    LastModifiedByUser?: UserBase;
    CriterionGroupName?: string;
    CriterionSubGroupName?: string;
    CriterionFulfillmentType?: string;
    CriterionFulfillmentStatus?: string;
    Name?: string;
    Case?: BaseCase;
    CreatedAt?: string;
    WorkflowStageCriterion?: WorkflowStageCriterion;
};

export type CaseNote = {
    id: string;
    NoteText?: string;
    ParentNoteId?: string;
    AuthorUserId?: string;
    NoteAudienceScope?: string;
    AuthorUser?: UserBase;
    CaseId?: string;
    CaseNoteReplies?: Array<BaseCaseNote>;
    CaseNote?: BaseCaseNote;
    CreatedAt?: string;
};

export type CaseTeamAssignment = {
    id: string;
    CreatedAt?: string;
    UserId?: string;
    CaseId?: string;
    CaseRole?: string;
    Case?: BaseCase;
    User?: UserBase;
};

export type CaseFile = {
    id: string;
    UserFileId?: string;
    CreatedByUserId?: string;
    CaseId?: string;
    ReasonForResubmit?: string;
    CreatedByAgentUserId?: string;
    CreatedByAgentUser?: UserBase;
    Status: string;
    Case?: BaseCase;
    CreatedAt?: string;
    CaseCriterionId?: string;
    CaseCriterion?: CaseCriterion;
    GeneratedFile?: GeneratedUserFile;
    imagesAvailable?: boolean;
};

export type CaseApplicant = {
    CaseId?: string;
    UserFamilyMemberId?: string;
    UserFamilyMember?: BaseFamilyMember;
    Case?: BaseCase;
};

export type Case = {
    Title?: string;
    id: string;
    CaseType?: string;
    PercentComplete?: number;
    Status?: string;
    AgencyCaseIdentifier?: string;
    SSN?: string;
    CaseAttributes?: CaseAttributes;
    CaseCriteria?: Array<CaseCriterion>;
    CaseNotes?: Array<CaseNote>;
    CaseTeamAssignments?: Array<CaseTeamAssignment>;
    CaseFiles?: Array<CaseFile>;
    CaseApplicants?: Array<CaseApplicant>;
    CreatedAt?: string;
};

export type GetUserFileCasesResponse = Array<Case>;

export type UpdateGeneratedFileRequest = {
    id: string;
    ContentType?: string;
    Description?: string;
    FileType?: string;
    File?: unknown;
    OriginalFilename?: string;
    Status?: string;
    SizeInBytes?: number;
    Title?: string;
};

export type UpdateGeneratedFileResponse = {
    id: string;
    ContentType?: string;
    OriginalFilename?: string;
    Status?: string;
    Description?: string;
    FamilyMemberId?: string;
    CreatedByUserId?: string;
    CreatedByAgentUserId?: string;
    CreatedByUser?: UserBase;
    CreatedByAgentUser?: UserBase;
    FileType?: string;
    CaseFiles?: Array<BaseCaseFile>;
    SizeInBytes?: number;
    CreatedAt?: string;
    LastModifiedAt?: string;
    UserFamilyMember?: BaseFamilyMember;
    FromUserFiles?: Array<BaseUserFile>;
    Title?: string;
};

export type GetUserFileTypesResponse = Array<{
    documentName: string;
    documentGroup: string;
}>;

export type WorkflowStage = {
    id: string;
    StageName?: string;
    WorkflowId?: string;
    StagePosition?: number;
    Workflow?: BaseWorkflow;
    WorkflowStateCriteria?: Array<WorkflowStageCriterion>;
};

export type Workflow = {
    id: string;
    WorkflowStages?: Array<WorkflowStage>;
    Type?: string;
    Name?: string;
    Description?: string;
};

export type CreateFamilyMemberRequest = {
    FirstName: string;
    LastName: string;
    DOB: string;
    Relationship: string;
};

export type CreateFamilyMemberResponse = {
    id: string;
    FirstName?: string;
    LastName?: string;
    UserId?: string;
    DOB?: string;
    Relationship?: string;
    User?: UserBase;
    CaseApplicants?: Array<CaseApplicant>;
    UserFiles?: Array<UserFile>;
    GeneratedFiles?: Array<GeneratedUserFile>;
};

export type UpdateFamilyMemberRequest = {
    FirstName?: string;
    id: string;
    LastName?: string;
    DOB?: string;
    Relationship?: string;
};

export type UpdateFamilyMemberResponse = {
    id: string;
    FirstName?: string;
    LastName?: string;
    UserId?: string;
    DOB?: string;
    Relationship?: string;
    User?: UserBase;
    CaseApplicants?: Array<CaseApplicant>;
    UserFiles?: Array<UserFile>;
    GeneratedFiles?: Array<GeneratedUserFile>;
};

export type DeleteFamilyMemberRequest = Array<(string)>;

export type FamilyMember = {
    id: string;
    FirstName?: string;
    LastName?: string;
    UserId?: string;
    DOB?: string;
    Relationship?: string;
    User?: UserBase;
    CaseApplicants?: Array<CaseApplicant>;
    UserFiles?: Array<UserFile>;
    GeneratedFiles?: Array<GeneratedUserFile>;
};

export type DeleteFamilyMemberResponse = Array<FamilyMember>;

export type AddCaseFamilyMembersRequest = Array<{
    UserFamilyMemberId: string;
}>;

export type AddCaseApplicantsResponse = {
    CaseId?: string;
    UserFamilyMemberId?: string;
    UserFamilyMember?: BaseFamilyMember;
    Case?: BaseCase;
};

export type DeleteCaseFamilyMembersRequest = Array<{
    UserFamilyMemberId: string;
}>;

export type CreateCaseRequestBody = {
    CaseTitle?: string;
    CaseType: string;
    SSN?: string;
    CaseAttributes?: CaseAttributes;
    CaseIdentifier?: string;
    FamilyMemberIds?: Array<(string)>;
    WorkflowId: string;
};

export type CreateCaseResponse = {
    Title?: string;
    id: string;
    CaseType?: string;
    PercentComplete?: number;
    Status?: string;
    AgencyCaseIdentifier?: string;
    SSN?: string;
    CaseAttributes?: CaseAttributes;
    CaseCriteria?: Array<CaseCriterion>;
    CaseNotes?: Array<CaseNote>;
    CaseTeamAssignments?: Array<CaseTeamAssignment>;
    CaseFiles?: Array<CaseFile>;
    CaseApplicants?: Array<CaseApplicant>;
    CreatedAt?: string;
};

export type UpdateCaseRequestBody = {
    CaseTitle?: string;
    CaseType?: string;
    SSN?: string;
    PercentComplete?: number;
    CaseAttributes?: CaseAttributes;
    Status?: 'OPEN' | 'CLOSED';
    AgencyCaseIdentifier?: string;
};

export type Status = 'OPEN' | 'CLOSED';

export type UpdateCaseResponse = {
    Title?: string;
    id: string;
    CaseType?: string;
    PercentComplete?: number;
    Status?: string;
    AgencyCaseIdentifier?: string;
    SSN?: string;
    CaseAttributes?: CaseAttributes;
    CaseCriteria?: Array<CaseCriterion>;
    CaseNotes?: Array<CaseNote>;
    CaseTeamAssignments?: Array<CaseTeamAssignment>;
    CaseFiles?: Array<CaseFile>;
    CaseApplicants?: Array<CaseApplicant>;
    CreatedAt?: string;
};

export type GetCaseResponse = {
    Title?: string;
    id: string;
    CaseType?: string;
    PercentComplete?: number;
    Status?: string;
    AgencyCaseIdentifier?: string;
    SSN?: string;
    CaseAttributes?: CaseAttributes;
    CaseCriteria?: Array<CaseCriterion>;
    CaseNotes?: Array<CaseNote>;
    CaseTeamAssignments?: Array<CaseTeamAssignment>;
    CaseFiles?: Array<CaseFile>;
    CaseApplicants?: Array<CaseApplicant>;
    CreatedAt?: string;
};

export type GetCasesResponse = Array<Case>;

export type LogViewCaseFamilyMember = {
    CaseId: string;
};

export type CreateUserRequest = {
    FirstName: string;
    LastName: string;
    Email: string;
    DOB: string;
    LanguageIsoCode?: string;
};

export type BasePlatformActivityLogs = {
    id: string;
    ActivityType: 'LOGIN' | 'LOGOUT' | 'CLIENT_UPDATE_PROFILE_SELF' | 'CLIENT_CREATE_FAMILY_MEMBER' | 'CLIENT_UPDATE_FAMILY_MEMBER' | 'CLIENT_DELETE_FAMILY_MEMBERS' | 'CLIENT_GET_FAMILY_MEMBER_BY_ID' | 'CLIENT_GET_ALL_USER_FAMILY_MEMBERS' | 'CLIENT_UPLOAD_DOCUMENT_SELF' | 'CLIENT_UPDATE_DOCUMENT_SELF' | 'CLIENT_UPLOAD_DOCUMENT_FAMILY_MEMBER' | 'CLIENT_UPDATE_DOCUMENT_FAMILY_MEMBER' | 'CLIENT_DOWNLOAD_DOCUMENT_SELF' | 'CLIENT_DOWNLOAD_DOCUMENT_FAMILY_MEMBER' | 'CLIENT_DELETE_DOCUMENT_SELF' | 'CLIENT_DELETE_DOCUMENT_FAMILY_MEMBER' | 'AGENT_UPDATE_CASE_CRITERION' | 'AGENT_UPDATE_PROFILE_SELF' | 'AGENT_UPLOAD_DOCUMENT_CLIENT' | 'AGENT_UPLOAD_DOCUMENT_FAMILY_MEMBER' | 'AGENT_UPDATE_DOCUMENT_CLIENT' | 'AGENT_UPDATE_DOCUMENT_FAMILY_MEMBER' | 'AGENT_GET_ALL_USER_CASES' | 'AGENT_APPROVE_DOCUMENT_CHECKLIST' | 'AGENT_REMOVE_CASE_WORKFLOW_CRITERIA' | 'AGENT_ADD_CASE_FILE_CLIENT' | 'AGENT_RESUBMIT_CASE_FILES_CLIENT' | 'AGENT_RESUBMIT_CASE_FILES_FAMILY_MEMBER' | 'AGENT_ADD_NEW_CASE_NOTE' | 'AGENT_REPLY_TO_CASE_NOTE' | 'AGENT_CLOSE_CASE' | 'AGENT_UNDER_REVIEW_CASE_FILE_CLIENT' | 'AGENT_REMOVE_CASE_NOTE' | 'AGENT_ACTIVATE_CASE' | 'AGENT_DOWNLOAD_CASE_FILE_CLIENT' | 'AGENT_DOWNLOAD_ALL_CASE_FILES' | 'AGENT_APPROVE_CASE_FILE_CLIENT' | 'AGENT_REJECT_CASE_FILE_CLIENT' | 'AGENT_VIEW_CASE_NOTES' | 'AGENT_PENDING_CASE_FILE_CLIENT' | 'AGENT_EDIT_CASE_NOTE' | 'AGENT_UPDATE_CASE_FILE_CLIENT' | 'AGENT_PREVIEW_CASE_FILE' | 'AGENT_GET_CASE_FILE_LISTING' | 'CLIENT_CREATE_CASE' | 'CLIENT_DELETE_CASE' | 'CLIENT_UPDATE_CASE' | 'CLIENT_GET_CASE_BY_ID' | 'CLIENT_ADD_CASE_FAMILY_MEMBERS' | 'CLIENT_REMOVE_CASE_FAMILY_MEMBERS' | 'CLIENT_REMOVE_CASE_FILES_SELF' | 'CLIENT_VIEW_CASE_FILE_LIST' | 'CLIENT_ADD_CASE_FILES_SELF' | 'CLIENT_RESUBMIT_CASE_FILES_SELF' | 'CLIENT_VIEW_CASE_FAMILY_MEMBERS' | 'CLIENT_VIEW_CASE_TEAM_MEMBERS' | 'CLIENT_GET_CASE_FAMILY_MEMBERS' | 'CLIENT_UPDATE_CASE_FILE_SELF' | 'CLIENT_ADD_CASE_FILES_FAMILY_MEMBER' | 'CLIENT_REMOVE_CASE_FILES_FAMILY_MEMBER' | 'CLIENT_RESUBMIT_CASE_FILES_FAMILY_MEMBER' | 'CLIENT_UPDATE_CASE_FILE_FAMILY_MEMBER' | 'AGENT_APPROVE_CASE_FILE_FAMILY_MEMBER' | 'AGENT_PENDING_CASE_FILE_FAMILY_MEMBER' | 'AGENT_REJECT_CASE_FILE_FAMILY_MEMBER' | 'AGENT_ADD_CASE_FILES_FAMILY_MEMBER' | 'AGENT_DOWNLOAD_CASE_FILE_FAMILY_MEMBER' | 'AGENT_UNDER_REVIEW_CASE_FILE_FAMILY_MEMBER' | 'AGENT_UPDATE_CASE_FILE_FAMILY_MEMBER';
    ActivityValue: string;
    CreatedAt?: string;
    RelatedEntity: 'CASE' | 'USER_CASE' | 'CASE_FILE' | 'FAMILY_MEMBER' | 'CASE_APPLICANT' | 'USER_FILE' | 'CASE_FAMILY_MEMBER';
    ActivityGeneratedByUserId?: string;
    User?: UserBase;
};

export type ActivityType = 'LOGIN' | 'LOGOUT' | 'CLIENT_UPDATE_PROFILE_SELF' | 'CLIENT_CREATE_FAMILY_MEMBER' | 'CLIENT_UPDATE_FAMILY_MEMBER' | 'CLIENT_DELETE_FAMILY_MEMBERS' | 'CLIENT_GET_FAMILY_MEMBER_BY_ID' | 'CLIENT_GET_ALL_USER_FAMILY_MEMBERS' | 'CLIENT_UPLOAD_DOCUMENT_SELF' | 'CLIENT_UPDATE_DOCUMENT_SELF' | 'CLIENT_UPLOAD_DOCUMENT_FAMILY_MEMBER' | 'CLIENT_UPDATE_DOCUMENT_FAMILY_MEMBER' | 'CLIENT_DOWNLOAD_DOCUMENT_SELF' | 'CLIENT_DOWNLOAD_DOCUMENT_FAMILY_MEMBER' | 'CLIENT_DELETE_DOCUMENT_SELF' | 'CLIENT_DELETE_DOCUMENT_FAMILY_MEMBER' | 'AGENT_UPDATE_CASE_CRITERION' | 'AGENT_UPDATE_PROFILE_SELF' | 'AGENT_UPLOAD_DOCUMENT_CLIENT' | 'AGENT_UPLOAD_DOCUMENT_FAMILY_MEMBER' | 'AGENT_UPDATE_DOCUMENT_CLIENT' | 'AGENT_UPDATE_DOCUMENT_FAMILY_MEMBER' | 'AGENT_GET_ALL_USER_CASES' | 'AGENT_APPROVE_DOCUMENT_CHECKLIST' | 'AGENT_REMOVE_CASE_WORKFLOW_CRITERIA' | 'AGENT_ADD_CASE_FILE_CLIENT' | 'AGENT_RESUBMIT_CASE_FILES_CLIENT' | 'AGENT_RESUBMIT_CASE_FILES_FAMILY_MEMBER' | 'AGENT_ADD_NEW_CASE_NOTE' | 'AGENT_REPLY_TO_CASE_NOTE' | 'AGENT_CLOSE_CASE' | 'AGENT_UNDER_REVIEW_CASE_FILE_CLIENT' | 'AGENT_REMOVE_CASE_NOTE' | 'AGENT_ACTIVATE_CASE' | 'AGENT_DOWNLOAD_CASE_FILE_CLIENT' | 'AGENT_DOWNLOAD_ALL_CASE_FILES' | 'AGENT_APPROVE_CASE_FILE_CLIENT' | 'AGENT_REJECT_CASE_FILE_CLIENT' | 'AGENT_VIEW_CASE_NOTES' | 'AGENT_PENDING_CASE_FILE_CLIENT' | 'AGENT_EDIT_CASE_NOTE' | 'AGENT_UPDATE_CASE_FILE_CLIENT' | 'AGENT_PREVIEW_CASE_FILE' | 'AGENT_GET_CASE_FILE_LISTING' | 'CLIENT_CREATE_CASE' | 'CLIENT_DELETE_CASE' | 'CLIENT_UPDATE_CASE' | 'CLIENT_GET_CASE_BY_ID' | 'CLIENT_ADD_CASE_FAMILY_MEMBERS' | 'CLIENT_REMOVE_CASE_FAMILY_MEMBERS' | 'CLIENT_REMOVE_CASE_FILES_SELF' | 'CLIENT_VIEW_CASE_FILE_LIST' | 'CLIENT_ADD_CASE_FILES_SELF' | 'CLIENT_RESUBMIT_CASE_FILES_SELF' | 'CLIENT_VIEW_CASE_FAMILY_MEMBERS' | 'CLIENT_VIEW_CASE_TEAM_MEMBERS' | 'CLIENT_GET_CASE_FAMILY_MEMBERS' | 'CLIENT_UPDATE_CASE_FILE_SELF' | 'CLIENT_ADD_CASE_FILES_FAMILY_MEMBER' | 'CLIENT_REMOVE_CASE_FILES_FAMILY_MEMBER' | 'CLIENT_RESUBMIT_CASE_FILES_FAMILY_MEMBER' | 'CLIENT_UPDATE_CASE_FILE_FAMILY_MEMBER' | 'AGENT_APPROVE_CASE_FILE_FAMILY_MEMBER' | 'AGENT_PENDING_CASE_FILE_FAMILY_MEMBER' | 'AGENT_REJECT_CASE_FILE_FAMILY_MEMBER' | 'AGENT_ADD_CASE_FILES_FAMILY_MEMBER' | 'AGENT_DOWNLOAD_CASE_FILE_FAMILY_MEMBER' | 'AGENT_UNDER_REVIEW_CASE_FILE_FAMILY_MEMBER' | 'AGENT_UPDATE_CASE_FILE_FAMILY_MEMBER';

export type RelatedEntity = 'CASE' | 'USER_CASE' | 'CASE_FILE' | 'FAMILY_MEMBER' | 'CASE_APPLICANT' | 'USER_FILE' | 'CASE_FAMILY_MEMBER';

export type CreateUserResponse = {
    id?: string;
    FirstName?: string;
    LastName?: string;
    Email?: string;
    DOB?: string;
    LegacyId?: string;
    IdpId?: string;
    PlatformActivityLogs?: Array<BasePlatformActivityLogs>;
    LanguageIsoCode?: string;
    TOSAcceptedAt?: string;
    TOSAccepted?: boolean;
};

export type UpdateUserRequest = {
    FirstName?: string;
    LastName?: string;
    Email?: string;
    DOB?: string | null;
    LanguageIsoCode?: string;
    TOSAcceptedAt?: string;
    TOSAccepted?: boolean;
    PPAcceptedAt?: string;
};

export type UpdateUserResponse = {
    id?: string;
    FirstName?: string;
    LastName?: string;
    Email?: string;
    DOB?: string;
    LegacyId?: string;
    IdpId?: string;
    PlatformActivityLogs?: Array<BasePlatformActivityLogs>;
    LanguageIsoCode?: string;
    TOSAcceptedAt?: string;
    TOSAccepted?: boolean;
};

export type PlatformActivityLogs = {
    id: string;
    ActivityType: 'LOGIN' | 'LOGOUT' | 'CLIENT_UPDATE_PROFILE_SELF' | 'CLIENT_CREATE_FAMILY_MEMBER' | 'CLIENT_UPDATE_FAMILY_MEMBER' | 'CLIENT_DELETE_FAMILY_MEMBERS' | 'CLIENT_GET_FAMILY_MEMBER_BY_ID' | 'CLIENT_GET_ALL_USER_FAMILY_MEMBERS' | 'CLIENT_UPLOAD_DOCUMENT_SELF' | 'CLIENT_UPDATE_DOCUMENT_SELF' | 'CLIENT_UPLOAD_DOCUMENT_FAMILY_MEMBER' | 'CLIENT_UPDATE_DOCUMENT_FAMILY_MEMBER' | 'CLIENT_DOWNLOAD_DOCUMENT_SELF' | 'CLIENT_DOWNLOAD_DOCUMENT_FAMILY_MEMBER' | 'CLIENT_DELETE_DOCUMENT_SELF' | 'CLIENT_DELETE_DOCUMENT_FAMILY_MEMBER' | 'AGENT_UPDATE_CASE_CRITERION' | 'AGENT_UPDATE_PROFILE_SELF' | 'AGENT_UPLOAD_DOCUMENT_CLIENT' | 'AGENT_UPLOAD_DOCUMENT_FAMILY_MEMBER' | 'AGENT_UPDATE_DOCUMENT_CLIENT' | 'AGENT_UPDATE_DOCUMENT_FAMILY_MEMBER' | 'AGENT_GET_ALL_USER_CASES' | 'AGENT_APPROVE_DOCUMENT_CHECKLIST' | 'AGENT_REMOVE_CASE_WORKFLOW_CRITERIA' | 'AGENT_ADD_CASE_FILE_CLIENT' | 'AGENT_RESUBMIT_CASE_FILES_CLIENT' | 'AGENT_RESUBMIT_CASE_FILES_FAMILY_MEMBER' | 'AGENT_ADD_NEW_CASE_NOTE' | 'AGENT_REPLY_TO_CASE_NOTE' | 'AGENT_CLOSE_CASE' | 'AGENT_UNDER_REVIEW_CASE_FILE_CLIENT' | 'AGENT_REMOVE_CASE_NOTE' | 'AGENT_ACTIVATE_CASE' | 'AGENT_DOWNLOAD_CASE_FILE_CLIENT' | 'AGENT_DOWNLOAD_ALL_CASE_FILES' | 'AGENT_APPROVE_CASE_FILE_CLIENT' | 'AGENT_REJECT_CASE_FILE_CLIENT' | 'AGENT_VIEW_CASE_NOTES' | 'AGENT_PENDING_CASE_FILE_CLIENT' | 'AGENT_EDIT_CASE_NOTE' | 'AGENT_UPDATE_CASE_FILE_CLIENT' | 'AGENT_PREVIEW_CASE_FILE' | 'AGENT_GET_CASE_FILE_LISTING' | 'CLIENT_CREATE_CASE' | 'CLIENT_DELETE_CASE' | 'CLIENT_UPDATE_CASE' | 'CLIENT_GET_CASE_BY_ID' | 'CLIENT_ADD_CASE_FAMILY_MEMBERS' | 'CLIENT_REMOVE_CASE_FAMILY_MEMBERS' | 'CLIENT_REMOVE_CASE_FILES_SELF' | 'CLIENT_VIEW_CASE_FILE_LIST' | 'CLIENT_ADD_CASE_FILES_SELF' | 'CLIENT_RESUBMIT_CASE_FILES_SELF' | 'CLIENT_VIEW_CASE_FAMILY_MEMBERS' | 'CLIENT_VIEW_CASE_TEAM_MEMBERS' | 'CLIENT_GET_CASE_FAMILY_MEMBERS' | 'CLIENT_UPDATE_CASE_FILE_SELF' | 'CLIENT_ADD_CASE_FILES_FAMILY_MEMBER' | 'CLIENT_REMOVE_CASE_FILES_FAMILY_MEMBER' | 'CLIENT_RESUBMIT_CASE_FILES_FAMILY_MEMBER' | 'CLIENT_UPDATE_CASE_FILE_FAMILY_MEMBER' | 'AGENT_APPROVE_CASE_FILE_FAMILY_MEMBER' | 'AGENT_PENDING_CASE_FILE_FAMILY_MEMBER' | 'AGENT_REJECT_CASE_FILE_FAMILY_MEMBER' | 'AGENT_ADD_CASE_FILES_FAMILY_MEMBER' | 'AGENT_DOWNLOAD_CASE_FILE_FAMILY_MEMBER' | 'AGENT_UNDER_REVIEW_CASE_FILE_FAMILY_MEMBER' | 'AGENT_UPDATE_CASE_FILE_FAMILY_MEMBER';
    ActivityValue: string;
    CreatedAt?: string;
    RelatedEntity: 'CASE' | 'USER_CASE' | 'CASE_FILE' | 'FAMILY_MEMBER' | 'CASE_APPLICANT' | 'USER_FILE' | 'CASE_FAMILY_MEMBER';
    ActivityGeneratedByUserId?: string;
    User?: UserBase;
};

export type GetUserActivitiesResponse = {
    items?: Array<PlatformActivityLogs>;
    currentPage?: number;
    pageSize?: number;
    total?: number;
    totalPages?: number;
};

export type GetUsesCases = Array<{
    id?: string;
    FirstName?: string;
    LastName?: string;
    Email?: string;
    DOB?: string;
    LegacyId?: string;
    IdpId?: string;
    LanguageIsoCode?: string;
    TOSAcceptedAt?: string;
    TOSAccepted?: boolean;
    CaseTeamAssignments?: Array<CaseTeamAssignment>;
}>;

export type GetUser = {
    id?: string;
    FirstName?: string;
    LastName?: string;
    Email?: string;
    DOB?: string;
    LegacyId?: string;
    IdpId?: string;
    LanguageIsoCode?: string;
    TOSAcceptedAt?: string;
    TOSAccepted?: boolean;
    CaseTeamAssignments?: Array<CaseTeamAssignment>;
    UserFamilyMembers?: Array<FamilyMember>;
};

export type AgencyType = {
    HPD: 'HPD';
    DHS: 'DHS';
    PATH: 'PATH';
};

export type HPD = 'HPD';

export type DHS = 'DHS';

export type PATH = 'PATH';

export type CaseFileStatus = {
    PENDING: 'PENDING';
    UNDER_REVIEW: 'UNDER_REVIEW';
    ACCEPTED: 'ACCEPTED';
    REJECT: 'REJECT';
};

export type PENDING = 'PENDING';

export type UNDER_REVIEW = 'UNDER_REVIEW';

export type ACCEPTED = 'ACCEPTED';

export type REJECT = 'REJECT';

export type CaseCriterionFulfillmentStatus = {
    PENDING: 'PENDING';
    DONE: 'DONE';
};

export type DONE = 'DONE';

export type CriterionFulfillmentType = {
    REQUIRED: 'REQUIRED';
    OPTIONAL: 'OPTIONAL';
};

export type REQUIRED = 'REQUIRED';

export type OPTIONAL = 'OPTIONAL';

export type UserFileStatus = {
    DRAFT: 'UPLOAD_PENDING';
    UPLOADED: 'UPLOADED';
};

export type DRAFT = 'UPLOAD_PENDING';

export type UPLOADED = 'UPLOADED';

export type StakeHolderGroups = {
    PLATFORM: 'Platform Development';
    CLIENT: 'Client';
    TRUSTED_USER: 'Client Trusted User';
    PATH_AGENCY: 'PATH Agency';
    HPD_AGENCY: 'HPD Agency';
    DHS_AGENCY: 'DHS Agency';
    LANDLORD: 'Building Landlord / Owner';
    SPONSOR: 'Sponsor / Marketing Agent';
    HOUSING_SPECIALIST_AGENT: 'Housing Specialist Agent';
    CBO: 'Community-Based Organization';
};

export type PLATFORM = 'Platform Development';

export type CLIENT = 'Client';

export type TRUSTED_USER = 'Client Trusted User';

export type PATH_AGENCY = 'PATH Agency';

export type HPD_AGENCY = 'HPD Agency';

export type DHS_AGENCY = 'DHS Agency';

export type LANDLORD = 'Building Landlord / Owner';

export type SPONSOR = 'Sponsor / Marketing Agent';

export type HOUSING_SPECIALIST_AGENT = 'Housing Specialist Agent';

export type CBO = 'Community-Based Organization';

export type StakeHolderGroupRoles = {
    PLATFORM_ADMIN: 'Platform Administrator';
    PLATFORM_DEV: 'Platform Development';
    PLATFORM_SUPPORT: 'Platform Support';
    CLIENT: 'Client';
    TRUSTED_USER: 'Client Trusted User';
    PATH_AGENT: 'PATH Employee';
    PATH_ADMIN: 'PATH Administrator';
    HPD_AGENT: 'HPD Employee';
    HPD_ADMIN: 'HPD Administrator';
    DHS_AGENT: 'DHS Employee';
    DHS_ADMIN: 'DHS Administrator';
    SPONSOR: 'Sponsor';
    CBO_SUPERVISOR: 'CBO Supervisor';
    CBO_STAFFER: 'CBO Staffer';
};

export type PLATFORM_ADMIN = 'Platform Administrator';

export type PLATFORM_DEV = 'Platform Development';

export type PLATFORM_SUPPORT = 'Platform Support';

export type PATH_AGENT = 'PATH Employee';

export type PATH_ADMIN = 'PATH Administrator';

export type HPD_AGENT = 'HPD Employee';

export type HPD_ADMIN = 'HPD Administrator';

export type DHS_AGENT = 'DHS Employee';

export type DHS_ADMIN = 'DHS Administrator';

export type SPONSOR2 = 'Sponsor';

export type CBO_SUPERVISOR = 'CBO Supervisor';

export type CBO_STAFFER = 'CBO Staffer';

export type Permissions = {
    CAN_CHANGE_CASE_FILE_STATUS: Array<('PATH Administrator' | 'PATH Employee' | 'DHS Administrator' | 'DHS Employee' | 'HPD Administrator' | 'HPD Employee')>;
    CAN_CHANGE_CASE_STATUS: Array<('HPD Administrator' | 'HPD Employee' | 'DHS Administrator' | 'DHS Employee' | 'PATH Administrator' | 'PATH Employee')>;
    CAN_CHANGE_CASE_WORKFLOW_STAGE_STATUS: Array<('Sponsor' | 'PATH Administrator' | 'PATH Employee')>;
    CAN_VIEW_CASE_WORKFLOW_STAGE_STATUS: Array<('CBO Staffer' | 'CBO Supervisor' | 'Sponsor' | 'HPD Administrator' | 'HPD Employee' | 'DHS Administrator' | 'DHS Employee' | 'PATH Administrator' | 'PATH Employee' | 'Client' | 'Client Trusted User')>;
    CAN_VIEW_CASE_FILE_STATUS: Array<('CBO Staffer' | 'CBO Supervisor' | 'Sponsor' | 'HPD Administrator' | 'HPD Employee' | 'DHS Administrator' | 'DHS Employee' | 'PATH Administrator' | 'PATH Employee' | 'Client' | 'Client Trusted User')>;
    CAN_GET_USER_CASE: Array<('CBO Staffer' | 'CBO Supervisor' | 'Sponsor' | 'HPD Administrator' | 'HPD Employee' | 'DHS Administrator' | 'DHS Employee' | 'PATH Administrator' | 'PATH Employee' | 'Client' | 'Client Trusted User')>;
    CAN_DOWNLOAD_CASE_FILE: Array<('CBO Staffer' | 'CBO Supervisor' | 'Sponsor' | 'HPD Administrator' | 'HPD Employee' | 'DHS Administrator' | 'DHS Employee' | 'PATH Administrator' | 'PATH Employee' | 'Client' | 'Client Trusted User')>;
    CAN_UPLOAD_CASE_FILE_FOR_CLIENT: Array<('CBO Staffer' | 'CBO Supervisor' | 'HPD Administrator' | 'HPD Employee' | 'DHS Administrator' | 'DHS Employee' | 'PATH Administrator' | 'PATH Employee' | 'Client' | 'Client Trusted User')>;
};

export type ActivityLogs = Array<('LOGIN' | 'LOGOUT' | 'CLIENT_UPDATE_PROFILE_SELF' | 'CLIENT_CREATE_FAMILY_MEMBER' | 'CLIENT_UPDATE_FAMILY_MEMBER' | 'CLIENT_DELETE_FAMILY_MEMBERS' | 'CLIENT_GET_FAMILY_MEMBER_BY_ID' | 'CLIENT_GET_ALL_USER_FAMILY_MEMBERS' | 'CLIENT_UPLOAD_DOCUMENT_SELF' | 'CLIENT_UPDATE_DOCUMENT_SELF' | 'CLIENT_UPLOAD_DOCUMENT_FAMILY_MEMBER' | 'CLIENT_UPDATE_DOCUMENT_FAMILY_MEMBER' | 'CLIENT_DOWNLOAD_DOCUMENT_SELF' | 'CLIENT_DOWNLOAD_DOCUMENT_FAMILY_MEMBER' | 'CLIENT_DELETE_DOCUMENT_SELF' | 'CLIENT_DELETE_DOCUMENT_FAMILY_MEMBER' | 'AGENT_UPDATE_CASE_CRITERION' | 'AGENT_UPDATE_PROFILE_SELF' | 'AGENT_UPLOAD_DOCUMENT_CLIENT' | 'AGENT_UPLOAD_DOCUMENT_FAMILY_MEMBER' | 'AGENT_UPDATE_DOCUMENT_CLIENT' | 'AGENT_UPDATE_DOCUMENT_FAMILY_MEMBER' | 'AGENT_GET_ALL_USER_CASES' | 'AGENT_APPROVE_DOCUMENT_CHECKLIST' | 'AGENT_REMOVE_CASE_WORKFLOW_CRITERIA' | 'AGENT_ADD_CASE_FILE_CLIENT' | 'AGENT_RESUBMIT_CASE_FILES_CLIENT' | 'AGENT_RESUBMIT_CASE_FILES_FAMILY_MEMBER' | 'AGENT_ADD_NEW_CASE_NOTE' | 'AGENT_REPLY_TO_CASE_NOTE' | 'AGENT_CLOSE_CASE' | 'AGENT_UNDER_REVIEW_CASE_FILE_CLIENT' | 'AGENT_REMOVE_CASE_NOTE' | 'AGENT_ACTIVATE_CASE' | 'AGENT_DOWNLOAD_CASE_FILE_CLIENT' | 'AGENT_DOWNLOAD_ALL_CASE_FILES' | 'AGENT_APPROVE_CASE_FILE_CLIENT' | 'AGENT_REJECT_CASE_FILE_CLIENT' | 'AGENT_VIEW_CASE_NOTES' | 'AGENT_PENDING_CASE_FILE_CLIENT' | 'AGENT_EDIT_CASE_NOTE' | 'AGENT_UPDATE_CASE_FILE_CLIENT' | 'AGENT_PREVIEW_CASE_FILE' | 'AGENT_GET_CASE_FILE_LISTING' | 'CLIENT_CREATE_CASE' | 'CLIENT_DELETE_CASE' | 'CLIENT_UPDATE_CASE' | 'CLIENT_GET_CASE_BY_ID' | 'CLIENT_ADD_CASE_FAMILY_MEMBERS' | 'CLIENT_REMOVE_CASE_FAMILY_MEMBERS' | 'CLIENT_REMOVE_CASE_FILES_SELF' | 'CLIENT_VIEW_CASE_FILE_LIST' | 'CLIENT_ADD_CASE_FILES_SELF' | 'CLIENT_RESUBMIT_CASE_FILES_SELF' | 'CLIENT_VIEW_CASE_FAMILY_MEMBERS' | 'CLIENT_VIEW_CASE_TEAM_MEMBERS' | 'CLIENT_GET_CASE_FAMILY_MEMBERS' | 'CLIENT_UPDATE_CASE_FILE_SELF' | 'CLIENT_ADD_CASE_FILES_FAMILY_MEMBER' | 'CLIENT_REMOVE_CASE_FILES_FAMILY_MEMBER' | 'CLIENT_RESUBMIT_CASE_FILES_FAMILY_MEMBER' | 'CLIENT_UPDATE_CASE_FILE_FAMILY_MEMBER' | 'AGENT_APPROVE_CASE_FILE_FAMILY_MEMBER' | 'AGENT_PENDING_CASE_FILE_FAMILY_MEMBER' | 'AGENT_REJECT_CASE_FILE_FAMILY_MEMBER' | 'AGENT_ADD_CASE_FILES_FAMILY_MEMBER' | 'AGENT_DOWNLOAD_CASE_FILE_FAMILY_MEMBER' | 'AGENT_UNDER_REVIEW_CASE_FILE_FAMILY_MEMBER' | 'AGENT_UPDATE_CASE_FILE_FAMILY_MEMBER')>;

export type Constants = {
    AgencyType: AgencyType;
    CaseFileStatus: CaseFileStatus;
    CaseCriterionFulfillmentStatus: CaseCriterionFulfillmentStatus;
    CriterionFulfillmentType: CriterionFulfillmentType;
    UserFileStatus: UserFileStatus;
    StakeHolderGroups: StakeHolderGroups;
    StakeHolderGroupRoles: StakeHolderGroupRoles;
    Permissions: Permissions;
    ActivityLogs: ActivityLogs;
};

export type AddCaseNoteRequest = {
    NoteText: string;
    ParentNodeId?: string;
    NoteAudienceScope?: string;
    CaseId: string;
};

export type UpdateCaseNoteRequest = {
    NoteText: string;
    id: string;
};

export type GetCaseNotesResponse = Array<CaseNote>;

export type UpdateCaseCriterion = {
    CriterionFulfillmentStatus: 'PENDING' | 'DONE';
    Name?: string;
    CriterionSubGroupName?: string;
    CriterionGroupName?: string;
};

export type CriterionFulfillmentStatus = 'PENDING' | 'DONE';

export type CaseCriteria = Array<CaseCriterion>;

export type CaseActivityLogs = {
    id: string;
    ActivityType: 'LOGIN' | 'LOGOUT' | 'CLIENT_UPDATE_PROFILE_SELF' | 'CLIENT_CREATE_FAMILY_MEMBER' | 'CLIENT_UPDATE_FAMILY_MEMBER' | 'CLIENT_DELETE_FAMILY_MEMBERS' | 'CLIENT_GET_FAMILY_MEMBER_BY_ID' | 'CLIENT_GET_ALL_USER_FAMILY_MEMBERS' | 'CLIENT_UPLOAD_DOCUMENT_SELF' | 'CLIENT_UPDATE_DOCUMENT_SELF' | 'CLIENT_UPLOAD_DOCUMENT_FAMILY_MEMBER' | 'CLIENT_UPDATE_DOCUMENT_FAMILY_MEMBER' | 'CLIENT_DOWNLOAD_DOCUMENT_SELF' | 'CLIENT_DOWNLOAD_DOCUMENT_FAMILY_MEMBER' | 'CLIENT_DELETE_DOCUMENT_SELF' | 'CLIENT_DELETE_DOCUMENT_FAMILY_MEMBER' | 'AGENT_UPDATE_CASE_CRITERION' | 'AGENT_UPDATE_PROFILE_SELF' | 'AGENT_UPLOAD_DOCUMENT_CLIENT' | 'AGENT_UPLOAD_DOCUMENT_FAMILY_MEMBER' | 'AGENT_UPDATE_DOCUMENT_CLIENT' | 'AGENT_UPDATE_DOCUMENT_FAMILY_MEMBER' | 'AGENT_GET_ALL_USER_CASES' | 'AGENT_APPROVE_DOCUMENT_CHECKLIST' | 'AGENT_REMOVE_CASE_WORKFLOW_CRITERIA' | 'AGENT_ADD_CASE_FILE_CLIENT' | 'AGENT_RESUBMIT_CASE_FILES_CLIENT' | 'AGENT_RESUBMIT_CASE_FILES_FAMILY_MEMBER' | 'AGENT_ADD_NEW_CASE_NOTE' | 'AGENT_REPLY_TO_CASE_NOTE' | 'AGENT_CLOSE_CASE' | 'AGENT_UNDER_REVIEW_CASE_FILE_CLIENT' | 'AGENT_REMOVE_CASE_NOTE' | 'AGENT_ACTIVATE_CASE' | 'AGENT_DOWNLOAD_CASE_FILE_CLIENT' | 'AGENT_DOWNLOAD_ALL_CASE_FILES' | 'AGENT_APPROVE_CASE_FILE_CLIENT' | 'AGENT_REJECT_CASE_FILE_CLIENT' | 'AGENT_VIEW_CASE_NOTES' | 'AGENT_PENDING_CASE_FILE_CLIENT' | 'AGENT_EDIT_CASE_NOTE' | 'AGENT_UPDATE_CASE_FILE_CLIENT' | 'AGENT_PREVIEW_CASE_FILE' | 'AGENT_GET_CASE_FILE_LISTING' | 'CLIENT_CREATE_CASE' | 'CLIENT_DELETE_CASE' | 'CLIENT_UPDATE_CASE' | 'CLIENT_GET_CASE_BY_ID' | 'CLIENT_ADD_CASE_FAMILY_MEMBERS' | 'CLIENT_REMOVE_CASE_FAMILY_MEMBERS' | 'CLIENT_REMOVE_CASE_FILES_SELF' | 'CLIENT_VIEW_CASE_FILE_LIST' | 'CLIENT_ADD_CASE_FILES_SELF' | 'CLIENT_RESUBMIT_CASE_FILES_SELF' | 'CLIENT_VIEW_CASE_FAMILY_MEMBERS' | 'CLIENT_VIEW_CASE_TEAM_MEMBERS' | 'CLIENT_GET_CASE_FAMILY_MEMBERS' | 'CLIENT_UPDATE_CASE_FILE_SELF' | 'CLIENT_ADD_CASE_FILES_FAMILY_MEMBER' | 'CLIENT_REMOVE_CASE_FILES_FAMILY_MEMBER' | 'CLIENT_RESUBMIT_CASE_FILES_FAMILY_MEMBER' | 'CLIENT_UPDATE_CASE_FILE_FAMILY_MEMBER' | 'AGENT_APPROVE_CASE_FILE_FAMILY_MEMBER' | 'AGENT_PENDING_CASE_FILE_FAMILY_MEMBER' | 'AGENT_REJECT_CASE_FILE_FAMILY_MEMBER' | 'AGENT_ADD_CASE_FILES_FAMILY_MEMBER' | 'AGENT_DOWNLOAD_CASE_FILE_FAMILY_MEMBER' | 'AGENT_UNDER_REVIEW_CASE_FILE_FAMILY_MEMBER' | 'AGENT_UPDATE_CASE_FILE_FAMILY_MEMBER';
    ActivityValue: string;
    CreatedAt?: string;
    CaseId?: string;
    ActivityAcknowledgedByUserId?: string;
    ActivityAcknowledgedBy?: UserBase;
    Case?: BaseCase;
    User?: UserBase;
    RelatedEntity: 'CASE' | 'USER_CASE' | 'CASE_FILE' | 'FAMILY_MEMBER' | 'CASE_APPLICANT' | 'USER_FILE' | 'CASE_FAMILY_MEMBER';
    ActivityGeneratedByUserId?: string;
};

export type GetUserActivityResponse = {
    items?: Array<CaseActivityLogs>;
    total?: number;
    take?: number;
    skip?: number;
    totalPages?: number;
};

export type MarkCaseActivityAsRead = {
    caseId: string;
    caseActivityLogId: string;
    readStatus: boolean;
};

export type GetLanguagesResponse = Array<Language>;

export type GetActivityLogTypesResponse = Array<(string)>;

export type AddCaseFilesData = {
    caseId: string;
    /**
     * Default response body
     */
    requestBody?: AddCaseFileRequest;
    userId?: string;
};

export type AddCaseFilesResponse = unknown;

export type DeleteCaseFilesData = {
    caseId: string;
    /**
     * Default response body
     */
    requestBody?: DeleteCaseFileRequest;
};

export type DeleteCaseFilesResponse = unknown;

export type GetCaseFileListingData = {
    caseId: string;
};

export type GetCaseFileListingResponse = GetCaseListingResponse;

export type UpdateCaseFileData = {
    id: string;
    /**
     * Default response body
     */
    requestBody?: UpdateCaseFileRequest;
};

export type UpdateCaseFileResponse = unknown;

export type LogCaseFilesDownloadData = {
    /**
     * Default response body
     */
    requestBody?: LogDownloadCaseFile;
};

export type LogCaseFilesDownloadResponse = unknown;

export type LogPreviewCaseFileData = {
    /**
     * Default response body
     */
    requestBody?: LogPreviewCaseFile;
};

export type LogPreviewCaseFileResponse = unknown;

export type GetUserFilesData = {
    userId: string;
};

export type GetUserFilesResponse2 = GetUserFilesResponse;

export type GetMyFilesResponse = GetUserFilesResponse;

export type UpdateUserFileData = {
    /**
     * Default response body
     */
    requestBody?: UpdateUserFileRequest;
};

export type UpdateUserFileResponse2 = UpdateUserFileResponse;

export type DeleteUserFileData = {
    /**
     * Default response body
     */
    requestBody?: DeleteUserFileRequest;
};

export type DeleteUserFileResponse = unknown;

export type GenerateUserFileData = {
    /**
     * Default response body
     */
    requestBody?: CreateUserFileRequest;
};

export type GenerateUserFileResponse = CreateUserFileResponse;

export type UpdateGeneratedFileData = {
    /**
     * Default response body
     */
    requestBody?: UpdateGeneratedFileRequest;
};

export type UpdateGeneratedFileResponse2 = UpdateGeneratedFileResponse;

export type GetGenerateFileByIdData = {
    id: string;
    userId?: string;
};

export type GetGenerateFileByIdResponse = GeneratedUserFile;

export type DeleteGeneratedFileByIdData = {
    id: string;
};

export type DeleteGeneratedFileByIdResponse = unknown;

export type GetUserFamilyMemberFilesData = {
    userFamilyMemberId: string;
    userId: string;
};

export type GetUserFamilyMemberFilesResponse = GetUserFilesResponse;

export type GetUserFileDownloadUrlData = {
    disposition?: 'attachment' | 'inline';
    fileId: string;
    uploadVersionId: string;
};

export type GetUserFileDownloadUrlResponse = UserFileDownloadResponse;

export type GetUserFileCasesData = {
    fileId: string;
    userId: string;
};

export type GetUserFileCasesResponse2 = GetUserFileCasesResponse;

export type GetGeneratedFileDownloadUrlData = {
    caseFileId?: string;
    disposition?: 'attachment' | 'inline';
    generatedFileId: string;
    userId?: string;
};

export type GetGeneratedFileDownloadUrlResponse = UserFileDownloadResponse;

export type GetGeneratedTfileThumbnailDownloadUrlData = {
    disposition?: 'attachment' | 'inline';
    generatedFileId: string;
    isPreview?: boolean;
    userId?: string;
};

export type GetGeneratedTfileThumbnailDownloadUrlResponse = UserFileDownloadResponse;

export type GetUserFileTypesResponse2 = GetUserFileTypesResponse;

export type GetWorkflowsResponse = Array<Workflow>;

export type CreateUserFamilyMemberData = {
    /**
     * Default response body
     */
    requestBody?: CreateFamilyMemberRequest;
};

export type CreateUserFamilyMemberResponse = CreateFamilyMemberResponse;

export type UpdateUserFamilyMemberData = {
    /**
     * Default response body
     */
    requestBody?: UpdateFamilyMemberRequest;
};

export type UpdateUserFamilyMemberResponse = UpdateFamilyMemberResponse;

export type DeleteFamilyMemberData = {
    /**
     * Default response body
     */
    requestBody?: DeleteFamilyMemberRequest;
};

export type DeleteFamilyMemberResponse2 = DeleteFamilyMemberResponse;

export type GetFamilyMembersResponse = Array<FamilyMember>;

export type GetFamilyMemberData = {
    id: string;
};

export type GetFamilyMemberResponse = FamilyMember;

export type AddCaseFamilyMembersData = {
    caseId: string;
    /**
     * Default response body
     */
    requestBody?: AddCaseFamilyMembersRequest;
};

export type AddCaseFamilyMembersResponse = AddCaseApplicantsResponse;

export type DeleteCaseFamilyMembersData = {
    caseId: string;
    /**
     * Default response body
     */
    requestBody?: DeleteCaseFamilyMembersRequest;
};

export type DeleteCaseFamilyMembersResponse = unknown;

export type GetCaseFamilyMembersData = {
    caseId: string;
};

export type GetCaseFamilyMembersResponse = Array<CaseApplicant>;

export type CreateCaseData = {
    /**
     * Default response body
     */
    requestBody?: CreateCaseRequestBody;
};

export type CreateCaseResponse2 = CreateCaseResponse;

export type GetCasesData = {
    status?: 'OPEN' | 'CLOSED' | '';
};

export type GetCasesResponse2 = GetCasesResponse;

export type UpdateCaseData = {
    caseId: string;
    /**
     * Default response body
     */
    requestBody?: UpdateCaseRequestBody;
};

export type UpdateCaseResponse2 = UpdateCaseResponse;

export type DeleteCaseData = {
    caseId: string;
};

export type DeleteCaseResponse = unknown;

export type GetCaseData = {
    caseId: string;
    workflowType: string;
};

export type GetCaseResponse2 = GetCaseResponse;

export type GetUserCasesAdminData = {
    userId: string;
};

export type GetUserCasesAdminResponse = GetCasesResponse;

export type LogViewCaseFamilyMemberData = {
    /**
     * Default response body
     */
    requestBody?: LogViewCaseFamilyMember;
};

export type LogViewCaseFamilyMemberResponse = unknown;

export type CreateUserData = {
    /**
     * Default response body
     */
    requestBody?: CreateUserRequest;
};

export type CreateUserResponse2 = CreateUserResponse;

export type GetUserResponse = UserBase;

export type UpdateUserData = {
    /**
     * Default response body
     */
    requestBody?: UpdateUserRequest;
};

export type UpdateUserResponse2 = UpdateUserResponse;

export type DeleteUserResponse = unknown;

export type GetUserActivityData = {
    activityTypes?: string;
    from?: string;
    page?: number;
    pageSize?: number;
    to?: string;
};

export type GetUserActivityResponse2 = GetUserActivitiesResponse;

export type GetUsersCasesData = {
    search: string;
    skip?: number;
    take?: number;
};

export type GetUsersCasesResponse = GetUsesCases;

export type GetUserAdminData = {
    userId: string;
};

export type GetUserAdminResponse = GetUser;

export type PostMessagingPostMessageToWsConnectionsData = {
    userId: string;
};

export type PostMessagingPostMessageToWsConnectionsResponse = unknown;

export type GetConstantsResponse = Constants;

export type AddCaseNoteData = {
    /**
     * Default response body
     */
    requestBody?: AddCaseNoteRequest;
};

export type AddCaseNoteResponse = CaseNote;

export type DeleteCaseNoteData = {
    caseNoteId: string;
};

export type DeleteCaseNoteResponse = CaseNote;

export type UpdateCaseNoteData = {
    /**
     * Default response body
     */
    requestBody?: UpdateCaseNoteRequest;
};

export type UpdateCaseNoteResponse = CaseNote;

export type GetCaseNotesData = {
    caseId: string;
    limit?: number;
    skip?: number;
};

export type GetCaseNotesResponse2 = GetCaseNotesResponse;

export type UpdateCaseCriterionData = {
    caseCriterionId: string;
    /**
     * Default response body
     */
    requestBody?: UpdateCaseCriterion;
};

export type UpdateCaseCriterionResponse = CaseCriterion;

export type GetCriteriaCaseFilesData = {
    caseCriterionId: string;
};

export type GetCriteriaCaseFilesResponse = Array<CaseFile>;

export type RemoveCaseCriterionAdminData = {
    caseCriterionId: string;
};

export type RemoveCaseCriterionAdminResponse = Array<CaseFile>;

export type ApproveChecklistData = {
    caseId: string;
    workflowStageId: string;
};

export type ApproveChecklistResponse = CaseCriteria;

export type GetActivitiesForUserData = {
    activityType?: string;
    caseId?: string;
    caseName?: string;
    caseType?: 'HPD' | 'PATH';
    from?: string;
    search?: string;
    skip?: number;
    take?: number;
    to?: string;
    userId: string;
};

export type GetActivitiesForUserResponse = GetUserActivityResponse;

export type UpdateCaseActivityLogReadStatusData = {
    /**
     * Default response body
     */
    requestBody?: MarkCaseActivityAsRead;
};

export type UpdateCaseActivityLogReadStatusResponse = CaseActivityLogs;

export type $OpenApiTs = {
    '/languages': {
        get: {
            res: {
                /**
                 * Default response body
                 */
                200: Array<Language>;
            };
        };
    };
    '/lookups/activity-log-types': {
        get: {
            res: {
                /**
                 * Default response body
                 */
                200: Array<(string)>;
            };
        };
    };
    '/cases/{caseId}/files': {
        post: {
            req: AddCaseFilesData;
            res: {
                /**
                 * Default response
                 */
                200: unknown;
            };
        };
        delete: {
            req: DeleteCaseFilesData;
            res: {
                /**
                 * Default response
                 */
                200: unknown;
            };
        };
        get: {
            req: GetCaseFileListingData;
            res: {
                /**
                 * Default response body
                 */
                200: GetCaseListingResponse;
            };
        };
    };
    '/cases/files/{id}': {
        patch: {
            req: UpdateCaseFileData;
            res: {
                /**
                 * Default response
                 */
                200: unknown;
            };
        };
    };
    '/cases/files/log-download': {
        post: {
            req: LogCaseFilesDownloadData;
            res: {
                /**
                 * Default response
                 */
                200: unknown;
            };
        };
    };
    '/cases/files/log-preview': {
        post: {
            req: LogPreviewCaseFileData;
            res: {
                /**
                 * Default response
                 */
                200: unknown;
            };
        };
    };
    '/users/{userId}/files': {
        get: {
            req: GetUserFilesData;
            res: {
                /**
                 * Default response body
                 */
                200: GetUserFilesResponse;
            };
        };
    };
    '/users/files': {
        get: {
            res: {
                /**
                 * Default response body
                 */
                200: GetUserFilesResponse;
            };
        };
        patch: {
            req: UpdateUserFileData;
            res: {
                /**
                 * Default response body
                 */
                200: UpdateUserFileResponse;
            };
        };
        delete: {
            req: DeleteUserFileData;
            res: {
                /**
                 * Default response
                 */
                200: unknown;
            };
        };
    };
    '/users/files/generated': {
        post: {
            req: GenerateUserFileData;
            res: {
                /**
                 * Default response body
                 */
                200: CreateUserFileResponse;
            };
        };
        patch: {
            req: UpdateGeneratedFileData;
            res: {
                /**
                 * Default response body
                 */
                200: UpdateGeneratedFileResponse;
            };
        };
        get: {
            req: GetGenerateFileByIdData;
            res: {
                /**
                 * Default response body
                 */
                200: GeneratedUserFile;
            };
        };
        delete: {
            req: DeleteGeneratedFileByIdData;
            res: {
                /**
                 * Default response body
                 */
                200: unknown;
            };
        };
    };
    '/users/{userId}/files/family-member': {
        get: {
            req: GetUserFamilyMemberFilesData;
            res: {
                /**
                 * Default response body
                 */
                200: GetUserFilesResponse;
            };
        };
    };
    '/users/files/download': {
        get: {
            req: GetUserFileDownloadUrlData;
            res: {
                /**
                 * Default response body
                 */
                200: UserFileDownloadResponse;
            };
        };
    };
    '/users/files/{fileId}/cases': {
        get: {
            req: GetUserFileCasesData;
            res: {
                /**
                 * Default response body
                 */
                200: GetUserFileCasesResponse;
            };
        };
    };
    '/users/files/generated/download': {
        get: {
            req: GetGeneratedFileDownloadUrlData;
            res: {
                /**
                 * Default response body
                 */
                200: UserFileDownloadResponse;
            };
        };
    };
    '/users/files/generated/thumbnail/download': {
        get: {
            req: GetGeneratedTfileThumbnailDownloadUrlData;
            res: {
                /**
                 * Default response body
                 */
                200: UserFileDownloadResponse;
            };
        };
    };
    '/users/files/types': {
        get: {
            res: {
                /**
                 * Default response body
                 */
                200: GetUserFileTypesResponse;
            };
        };
    };
    '/workflows': {
        get: {
            res: {
                /**
                 * Default response body
                 */
                200: Array<Workflow>;
            };
        };
    };
    '/user/family': {
        post: {
            req: CreateUserFamilyMemberData;
            res: {
                /**
                 * Default response body
                 */
                200: CreateFamilyMemberResponse;
            };
        };
        patch: {
            req: UpdateUserFamilyMemberData;
            res: {
                /**
                 * Default response body
                 */
                200: UpdateFamilyMemberResponse;
            };
        };
        delete: {
            req: DeleteFamilyMemberData;
            res: {
                /**
                 * Default response body
                 */
                200: DeleteFamilyMemberResponse;
            };
        };
        get: {
            res: {
                /**
                 * Default response body
                 */
                200: Array<FamilyMember>;
            };
        };
    };
    '/user/family/{id}': {
        get: {
            req: GetFamilyMemberData;
            res: {
                /**
                 * Default response body
                 */
                200: FamilyMember;
            };
        };
    };
    '/case/{caseId}/family-members': {
        post: {
            req: AddCaseFamilyMembersData;
            res: {
                /**
                 * Default response body
                 */
                200: AddCaseApplicantsResponse;
            };
        };
        delete: {
            req: DeleteCaseFamilyMembersData;
            res: {
                /**
                 * Default response
                 */
                200: unknown;
            };
        };
        get: {
            req: GetCaseFamilyMembersData;
            res: {
                /**
                 * Default response body
                 */
                200: Array<CaseApplicant>;
            };
        };
    };
    '/cases': {
        post: {
            req: CreateCaseData;
            res: {
                /**
                 * Default response body
                 */
                200: CreateCaseResponse;
            };
        };
        get: {
            req: GetCasesData;
            res: {
                /**
                 * Default response body
                 */
                200: GetCasesResponse;
            };
        };
    };
    '/cases/{caseId}': {
        patch: {
            req: UpdateCaseData;
            res: {
                /**
                 * Default response body
                 */
                200: UpdateCaseResponse;
            };
        };
        delete: {
            req: DeleteCaseData;
            res: {
                /**
                 * Default response
                 */
                200: unknown;
            };
        };
        get: {
            req: GetCaseData;
            res: {
                /**
                 * Default response body
                 */
                200: GetCaseResponse;
            };
        };
    };
    '/cases/user/{userId}': {
        get: {
            req: GetUserCasesAdminData;
            res: {
                /**
                 * Default response body
                 */
                200: GetCasesResponse;
            };
        };
    };
    '/cases/family-member/log-view': {
        post: {
            req: LogViewCaseFamilyMemberData;
            res: {
                /**
                 * Default response
                 */
                200: unknown;
            };
        };
    };
    '/users': {
        post: {
            req: CreateUserData;
            res: {
                /**
                 * Default response body
                 */
                200: CreateUserResponse;
            };
        };
        get: {
            res: {
                /**
                 * Default response body
                 */
                200: UserBase;
            };
        };
        patch: {
            req: UpdateUserData;
            res: {
                /**
                 * Default response body
                 */
                200: UpdateUserResponse;
            };
        };
        delete: {
            res: {
                /**
                 * Default response
                 */
                200: unknown;
            };
        };
    };
    '/users/activities': {
        get: {
            req: GetUserActivityData;
            res: {
                /**
                 * Default response body
                 */
                200: GetUserActivitiesResponse;
            };
        };
    };
    '/users/cases': {
        get: {
            req: GetUsersCasesData;
            res: {
                /**
                 * Default response body
                 */
                200: GetUsesCases;
            };
        };
    };
    '/users/{userId}': {
        get: {
            req: GetUserAdminData;
            res: {
                /**
                 * Default response body
                 */
                200: GetUser;
            };
        };
    };
    '/messaging/post-message-to-ws-connections': {
        post: {
            req: PostMessagingPostMessageToWsConnectionsData;
            res: {
                /**
                 * Default response
                 */
                200: unknown;
            };
        };
    };
    '/constants': {
        get: {
            res: {
                /**
                 * Default response body
                 */
                200: Constants;
            };
        };
    };
    '/case/notes': {
        post: {
            req: AddCaseNoteData;
            res: {
                /**
                 * Default response body
                 */
                200: CaseNote;
            };
        };
    };
    '/case/notes/{caseNoteId}': {
        delete: {
            req: DeleteCaseNoteData;
            res: {
                /**
                 * Default response body
                 */
                200: CaseNote;
            };
        };
    };
    '/case/note': {
        patch: {
            req: UpdateCaseNoteData;
            res: {
                /**
                 * Default response body
                 */
                200: CaseNote;
            };
        };
    };
    '/case/{caseId}/notes': {
        get: {
            req: GetCaseNotesData;
            res: {
                /**
                 * Default response body
                 */
                200: GetCaseNotesResponse;
            };
        };
    };
    '/cases/criterion': {
        patch: {
            req: UpdateCaseCriterionData;
            res: {
                /**
                 * Default response body
                 */
                200: CaseCriterion;
            };
        };
    };
    '/cases/criteria/{caseCriterionId}/files': {
        get: {
            req: GetCriteriaCaseFilesData;
            res: {
                /**
                 * Default response body
                 */
                200: Array<CaseFile>;
            };
        };
    };
    '/case/criteria/{caseCriterionId}': {
        delete: {
            req: RemoveCaseCriterionAdminData;
            res: {
                /**
                 * Default response body
                 */
                200: Array<CaseFile>;
            };
        };
    };
    '/case/{caseId}/criteria/{workflowStageId}/approve': {
        patch: {
            req: ApproveChecklistData;
            res: {
                /**
                 * Default response body
                 */
                200: CaseCriteria;
            };
        };
    };
    '/activities/users/{userId}': {
        get: {
            req: GetActivitiesForUserData;
            res: {
                /**
                 * Default response body
                 */
                200: GetUserActivityResponse;
            };
        };
    };
    '/activities/case': {
        patch: {
            req: UpdateCaseActivityLogReadStatusData;
            res: {
                /**
                 * Default response body
                 */
                200: CaseActivityLogs;
            };
        };
    };
};